@startuml

title SesameWatchKitUI

HostingController -> DeviceModelProvider: 1. Create DeviceModelProvider
HostingController -> ContentViewModel: 2. Create ContntViewModel with DeviceModelProvider
HostingController -> ContentView: 3. Create ContntView with ContentViewModel
ContentView -> ContentViewModel: 4. Get Sesame2ListViewModel via sesame2ListViewModel()
ContentViewModel -> Sesame2ListViewModel: 5. Create Sesame2ListViewModel with sesame2 instance
ContentView -> Sesame2ListView: 6. Create Sesame2ListView with Sesame2ListViewModel
Sesame2ListView <-> UserData: 7. Set the environment object
ContentView -> ContentViewModel: 8. Get Sesame2LockViewModel via selectedSesameLockCellModel()
ContentViewModel -> Sesame2LockViewModel: 9. Create Sesame2LockViewModel with DeviceModel
ContentView -> Sesame2LockViewContainer: 10. Create Sesame2LockViewContainer with Sesame2LockViewModel
Sesame2LockViewContainer <-> UserData: 11. Set the environment object
Sesame2LockViewContainer -> SesameLockView: 12. Create SesameLockView with Sesame2LockViewModel
SesameLockView -> LockMovingEffect: 13. SesameLockView perform lock/unlock effect via LockMovingEffect modifier
Sesame2ListView -> Sesame2ListViewModel: 14. Get Sesame2ListCellModel via cellViewModels()
Sesame2ListViewModel -> Sesame2ListCellModel: 15. Create Sesame2ListCellModel with sesame2
Sesame2ListView -> Sesame2ListCell: 16. Create Sesame2ListCell with Sesame2ListCellModel
Sesame2ListCell <-> UserData: 17. Set the environment object, Modify selected data whenever user tapped the cell.
@enduml
